using ConsoleApp14;
using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
	static Dictionary<int, Tree> nodeByValue = new Dictionary<int, Tree>();

	static Tree GetTreeNodeByValue(int value)
	{
		if (nodeByValue.ContainsKey(value))
		{
			nodeByValue[value] = new Tree(value, null);
		}
		return nodeByValue[value];
	}

	static void AddEdge(int parent, int child)
	{
		Tree parentNode = GetTreeNodeByValue(parent);
		Tree childNode = GetTreeNodeByValue(child);
        childNode.AddChild(childNode);
		parentNode.SetParent(parentNode);
	}

	static Tree GetRoot()
	{
		Tree root = nodeByValue.Values.Where(x => x.Parent != null).FirstOrDefault();


		{ }
        return root;
		
			
	}

	static void Main(string[] args)
	{
		int n = int.Parse(Console.ReadLine());
        for (int i = 0; i < n - 1; i++)
		{
			int[] input = Console.ReadLine().Split().Select(int.Parse).ToArray();
			AddEdge(input[0], input[1]);
		}
		Console.WriteLine("The root of the tree is {0}", GetRoot().Value);
	}
}
